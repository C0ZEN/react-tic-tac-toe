{
  "root": true,
  "plugins": ["react-hooks", "jsx-a11y", "@typescript-eslint", "typescript-sort-keys"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "react-app",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["tsconfig.json"]
  },
  "rules": {
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "typescript-sort-keys/interface": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": true
      }
    ],
    "typescript-sort-keys/string-enum": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": true
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase", "UPPER_CASE"],
        "prefix": ["is", "has", "should", "contains", "as", "to"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "parameter",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "leadingUnderscore": "allow",
        "prefix": ["is", "has", "should", "contains", "as", "to"]
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": "memberLike",
        "modifiers": ["protected"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"]
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "enum",
        "format": ["PascalCase"],
        "suffix": ["Enum"]
      },
      {
        "selector": "objectLiteralProperty",
        "format": null
      }
    ]
  }
}
